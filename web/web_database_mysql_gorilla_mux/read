Рассмотрим, как мы можем взаимодействовать с базой данных в веб-приложении. Основные моменты работы с бд с помощью языка программирования Go были рассмотрены в материале Go и базы данных. В данном же случае мы рассмотрим только непосредственно применение этих моментов в рамках веб-приложения.

В качестве системы управления базами данных возьмем MySQL. Вначале создадим на сервере MySQL базу данных productdb и в ней таблицу products. Для этого можно использовать следующие выражений SQL

	
create database productdb;
use productdb;
create table products (
    id int auto_increment primary key,
    model varchar(30) not null,
    company varchar(30) not null,
    price int not null
)

То есть база данных productdb, в ней есть таблица products, которая будет хранить информацию о товарах, будет 4 столбца: id - идентификатор каждой записи, model - название товара, company - производитель товара и price - цена товара.

Добавим в нее какие-нибудь начальные данные, например, с помощью следующего скрипта:

insert into productdb.Products (model, company, price) 
values ('iPhone X', 'Apple', 74000),
('Pixel 2', 'Google', 62000),
('Galaxy S9', 'Samsung', 65000)

Прежде чем начать работать с MySQL, надо добавить драйвер для Go к переменной $GOPATH (если он ранее не был добавлен). Для этого нужно выполнить в командной строке/терминале следующую команду:

go get github.com/go-sql-driver/mysql

В функции main открываем подключение с базой данных с помощью функции sql.Open:
1
	
db, err := sql.Open("mysql", "root:password@/productdb")

Этой функции в качестве первого параметра передается название драйвера - "mysql". Второй параметр представляет настройки подключения, где root - название пользователя в MySQL, password - пароль этого пользователя (как правило тот, который устанавливается при установке MySQL), и productdb - название базы данных. Соответственно в каждом конкретном случае пароль может отличаться.

После открытия подключения устанавливается значение переменной database.
1
	
database = db

И далее функция IndexHandler устанавливается в качестве обработчика запросов по корневому адресу:
1
	
http.HandleFunc("/", IndexHandler)

Теперь определим в проекте папку templates, а в ней создадим новый файл index.html, который будет представлять шаблон
